// Code generated by turbopuffer-apigen. DO NOT EDIT.

import { Bm25ClauseParams, ContainsAllTokensFilterParams } from './namespaces';

export type AggregateBy = ['Count'] | ['Count', string];
export type Expr = ExprRefNew;
export type ExprRefNew = { $ref_new: string };
export type Filter =
  | [string, 'Eq', any]
  | [string, 'NotEq', any]
  | [string, 'In', any[]]
  | [string, 'NotIn', any[]]
  | [string, 'Contains', any]
  | [string, 'NotContains', any]
  | [string, 'ContainsAny', any[]]
  | [string, 'NotContainsAny', any[]]
  | [string, 'Lt', any]
  | [string, 'Lte', any]
  | [string, 'Gt', any]
  | [string, 'Gte', any]
  | [string, 'AnyLt', any]
  | [string, 'AnyLte', any]
  | [string, 'AnyGt', any]
  | [string, 'AnyGte', any]
  | [string, 'Glob', string]
  | [string, 'NotGlob', string]
  | [string, 'IGlob', string]
  | [string, 'NotIGlob', string]
  | [string, 'Regex', string]
  | [string, 'ContainsAllTokens', string]
  | [string, 'ContainsAllTokens', string[]]
  | [string, 'ContainsAllTokens', string, ContainsAllTokensFilterParams]
  | [string, 'ContainsAllTokens', string[], ContainsAllTokensFilterParams]
  | ['Not', Filter]
  | ['And', Filter[]]
  | ['Or', Filter[]];
export type RankBy = RankByVector | RankByText | RankByAttribute;
export type RankByAttribute = [string, RankByAttributeOrder];
export type RankByAttributeOrder = 'asc' | 'desc';
export type RankByText =
  | [string, 'BM25', string]
  | [string, 'BM25', string[]]
  | [string, 'BM25', string, Bm25ClauseParams]
  | [string, 'BM25', string[], Bm25ClauseParams]
  | ['Sum', RankByText[]]
  | ['Max', RankByText[]]
  | ['Product', [number, RankByText]]
  | ['Product', [RankByText, number]];
export type RankByVector = [string, 'ANN', number[]];
